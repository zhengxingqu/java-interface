<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.Dao.TriggersMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.Model.Triggers">
    <result column="TRIGGER_CATALOG" jdbcType="VARCHAR" property="triggerCatalog" />
    <result column="TRIGGER_SCHEMA" jdbcType="VARCHAR" property="triggerSchema" />
    <result column="TRIGGER_NAME" jdbcType="VARCHAR" property="triggerName" />
    <result column="EVENT_MANIPULATION" jdbcType="VARCHAR" property="eventManipulation" />
    <result column="EVENT_OBJECT_CATALOG" jdbcType="VARCHAR" property="eventObjectCatalog" />
    <result column="EVENT_OBJECT_SCHEMA" jdbcType="VARCHAR" property="eventObjectSchema" />
    <result column="EVENT_OBJECT_TABLE" jdbcType="VARCHAR" property="eventObjectTable" />
    <result column="ACTION_ORDER" jdbcType="BIGINT" property="actionOrder" />
    <result column="ACTION_ORIENTATION" jdbcType="VARCHAR" property="actionOrientation" />
    <result column="ACTION_TIMING" jdbcType="VARCHAR" property="actionTiming" />
    <result column="ACTION_REFERENCE_OLD_TABLE" jdbcType="VARCHAR" property="actionReferenceOldTable" />
    <result column="ACTION_REFERENCE_NEW_TABLE" jdbcType="VARCHAR" property="actionReferenceNewTable" />
    <result column="ACTION_REFERENCE_OLD_ROW" jdbcType="VARCHAR" property="actionReferenceOldRow" />
    <result column="ACTION_REFERENCE_NEW_ROW" jdbcType="VARCHAR" property="actionReferenceNewRow" />
    <result column="CREATED" jdbcType="TIMESTAMP" property="created" />
    <result column="SQL_MODE" jdbcType="VARCHAR" property="sqlMode" />
    <result column="DEFINER" jdbcType="VARCHAR" property="definer" />
    <result column="CHARACTER_SET_CLIENT" jdbcType="VARCHAR" property="characterSetClient" />
    <result column="COLLATION_CONNECTION" jdbcType="VARCHAR" property="collationConnection" />
    <result column="DATABASE_COLLATION" jdbcType="VARCHAR" property="databaseCollation" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.demo.Model.TriggersWithBLOBs">
    <result column="ACTION_CONDITION" jdbcType="LONGVARCHAR" property="actionCondition" />
    <result column="ACTION_STATEMENT" jdbcType="LONGVARCHAR" property="actionStatement" />
  </resultMap>
  <sql id="Blob_Column_List">
    ACTION_CONDITION, ACTION_STATEMENT
  </sql>
  <insert id="insert" parameterType="com.example.demo.Model.TriggersWithBLOBs">
    insert into TRIGGERS (TRIGGER_CATALOG, TRIGGER_SCHEMA, TRIGGER_NAME, 
      EVENT_MANIPULATION, EVENT_OBJECT_CATALOG, 
      EVENT_OBJECT_SCHEMA, EVENT_OBJECT_TABLE, ACTION_ORDER, 
      ACTION_ORIENTATION, ACTION_TIMING, ACTION_REFERENCE_OLD_TABLE, 
      ACTION_REFERENCE_NEW_TABLE, ACTION_REFERENCE_OLD_ROW, 
      ACTION_REFERENCE_NEW_ROW, CREATED, SQL_MODE, 
      DEFINER, CHARACTER_SET_CLIENT, COLLATION_CONNECTION, 
      DATABASE_COLLATION, ACTION_CONDITION, 
      ACTION_STATEMENT)
    values (#{triggerCatalog,jdbcType=VARCHAR}, #{triggerSchema,jdbcType=VARCHAR}, #{triggerName,jdbcType=VARCHAR}, 
      #{eventManipulation,jdbcType=VARCHAR}, #{eventObjectCatalog,jdbcType=VARCHAR}, 
      #{eventObjectSchema,jdbcType=VARCHAR}, #{eventObjectTable,jdbcType=VARCHAR}, #{actionOrder,jdbcType=BIGINT}, 
      #{actionOrientation,jdbcType=VARCHAR}, #{actionTiming,jdbcType=VARCHAR}, #{actionReferenceOldTable,jdbcType=VARCHAR}, 
      #{actionReferenceNewTable,jdbcType=VARCHAR}, #{actionReferenceOldRow,jdbcType=VARCHAR}, 
      #{actionReferenceNewRow,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}, #{sqlMode,jdbcType=VARCHAR}, 
      #{definer,jdbcType=VARCHAR}, #{characterSetClient,jdbcType=VARCHAR}, #{collationConnection,jdbcType=VARCHAR}, 
      #{databaseCollation,jdbcType=VARCHAR}, #{actionCondition,jdbcType=LONGVARCHAR}, 
      #{actionStatement,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.Model.TriggersWithBLOBs">
    insert into TRIGGERS
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="triggerCatalog != null">
        TRIGGER_CATALOG,
      </if>
      <if test="triggerSchema != null">
        TRIGGER_SCHEMA,
      </if>
      <if test="triggerName != null">
        TRIGGER_NAME,
      </if>
      <if test="eventManipulation != null">
        EVENT_MANIPULATION,
      </if>
      <if test="eventObjectCatalog != null">
        EVENT_OBJECT_CATALOG,
      </if>
      <if test="eventObjectSchema != null">
        EVENT_OBJECT_SCHEMA,
      </if>
      <if test="eventObjectTable != null">
        EVENT_OBJECT_TABLE,
      </if>
      <if test="actionOrder != null">
        ACTION_ORDER,
      </if>
      <if test="actionOrientation != null">
        ACTION_ORIENTATION,
      </if>
      <if test="actionTiming != null">
        ACTION_TIMING,
      </if>
      <if test="actionReferenceOldTable != null">
        ACTION_REFERENCE_OLD_TABLE,
      </if>
      <if test="actionReferenceNewTable != null">
        ACTION_REFERENCE_NEW_TABLE,
      </if>
      <if test="actionReferenceOldRow != null">
        ACTION_REFERENCE_OLD_ROW,
      </if>
      <if test="actionReferenceNewRow != null">
        ACTION_REFERENCE_NEW_ROW,
      </if>
      <if test="created != null">
        CREATED,
      </if>
      <if test="sqlMode != null">
        SQL_MODE,
      </if>
      <if test="definer != null">
        DEFINER,
      </if>
      <if test="characterSetClient != null">
        CHARACTER_SET_CLIENT,
      </if>
      <if test="collationConnection != null">
        COLLATION_CONNECTION,
      </if>
      <if test="databaseCollation != null">
        DATABASE_COLLATION,
      </if>
      <if test="actionCondition != null">
        ACTION_CONDITION,
      </if>
      <if test="actionStatement != null">
        ACTION_STATEMENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="triggerCatalog != null">
        #{triggerCatalog,jdbcType=VARCHAR},
      </if>
      <if test="triggerSchema != null">
        #{triggerSchema,jdbcType=VARCHAR},
      </if>
      <if test="triggerName != null">
        #{triggerName,jdbcType=VARCHAR},
      </if>
      <if test="eventManipulation != null">
        #{eventManipulation,jdbcType=VARCHAR},
      </if>
      <if test="eventObjectCatalog != null">
        #{eventObjectCatalog,jdbcType=VARCHAR},
      </if>
      <if test="eventObjectSchema != null">
        #{eventObjectSchema,jdbcType=VARCHAR},
      </if>
      <if test="eventObjectTable != null">
        #{eventObjectTable,jdbcType=VARCHAR},
      </if>
      <if test="actionOrder != null">
        #{actionOrder,jdbcType=BIGINT},
      </if>
      <if test="actionOrientation != null">
        #{actionOrientation,jdbcType=VARCHAR},
      </if>
      <if test="actionTiming != null">
        #{actionTiming,jdbcType=VARCHAR},
      </if>
      <if test="actionReferenceOldTable != null">
        #{actionReferenceOldTable,jdbcType=VARCHAR},
      </if>
      <if test="actionReferenceNewTable != null">
        #{actionReferenceNewTable,jdbcType=VARCHAR},
      </if>
      <if test="actionReferenceOldRow != null">
        #{actionReferenceOldRow,jdbcType=VARCHAR},
      </if>
      <if test="actionReferenceNewRow != null">
        #{actionReferenceNewRow,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="sqlMode != null">
        #{sqlMode,jdbcType=VARCHAR},
      </if>
      <if test="definer != null">
        #{definer,jdbcType=VARCHAR},
      </if>
      <if test="characterSetClient != null">
        #{characterSetClient,jdbcType=VARCHAR},
      </if>
      <if test="collationConnection != null">
        #{collationConnection,jdbcType=VARCHAR},
      </if>
      <if test="databaseCollation != null">
        #{databaseCollation,jdbcType=VARCHAR},
      </if>
      <if test="actionCondition != null">
        #{actionCondition,jdbcType=LONGVARCHAR},
      </if>
      <if test="actionStatement != null">
        #{actionStatement,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
</mapper>