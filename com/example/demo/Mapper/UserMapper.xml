<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.model.UserMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.service.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="hobby" jdbcType="VARCHAR" property="hobby" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, age, hobby
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.service.User">
    insert into user (id, name, age, 
      hobby)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{hobby,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.service.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="hobby != null">
        hobby,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="hobby != null">
        #{hobby,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.service.User">
    update user
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="hobby != null">
        hobby = #{hobby,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.service.User">
    update user
    set name = #{name,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      hobby = #{hobby,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.demo.Model.User">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="hobby" jdbcType="VARCHAR" property="hobby" />
  </resultMap>
  <insert id="insert" parameterType="com.example.demo.Model.User">
    insert into user (id, name, age, 
      hobby)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{hobby,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.Model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="hobby != null">
        hobby,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="hobby != null">
        #{hobby,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <resultMap id="BaseResultMap" type="com.example.demo.Model.User">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="hobby" jdbcType="VARCHAR" property="hobby" />
  </resultMap>
  <insert id="insert" parameterType="com.example.demo.Model.User">
    insert into user (id, name, age, 
      hobby)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{hobby,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.Model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="hobby != null">
        hobby,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="hobby != null">
        #{hobby,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <resultMap id="BaseResultMap" type="com.example.demo.Model.User">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="hobby" jdbcType="VARCHAR" property="hobby" />
  </resultMap>
  <insert id="insert" parameterType="com.example.demo.Model.User">
    insert into user (id, name, age, 
      hobby)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{hobby,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.Model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="hobby != null">
        hobby,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="hobby != null">
        #{hobby,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <resultMap id="BaseResultMap" type="com.example.demo.Model.User">
    <result column="Host" jdbcType="CHAR" property="host" />
    <result column="User" jdbcType="CHAR" property="user" />
    <result column="Select_priv" jdbcType="CHAR" property="selectPriv" />
    <result column="Insert_priv" jdbcType="CHAR" property="insertPriv" />
    <result column="Update_priv" jdbcType="CHAR" property="updatePriv" />
    <result column="Delete_priv" jdbcType="CHAR" property="deletePriv" />
    <result column="Create_priv" jdbcType="CHAR" property="createPriv" />
    <result column="Drop_priv" jdbcType="CHAR" property="dropPriv" />
    <result column="Reload_priv" jdbcType="CHAR" property="reloadPriv" />
    <result column="Shutdown_priv" jdbcType="CHAR" property="shutdownPriv" />
    <result column="Process_priv" jdbcType="CHAR" property="processPriv" />
    <result column="File_priv" jdbcType="CHAR" property="filePriv" />
    <result column="Grant_priv" jdbcType="CHAR" property="grantPriv" />
    <result column="References_priv" jdbcType="CHAR" property="referencesPriv" />
    <result column="Index_priv" jdbcType="CHAR" property="indexPriv" />
    <result column="Alter_priv" jdbcType="CHAR" property="alterPriv" />
    <result column="Show_db_priv" jdbcType="CHAR" property="showDbPriv" />
    <result column="Super_priv" jdbcType="CHAR" property="superPriv" />
    <result column="Create_tmp_table_priv" jdbcType="CHAR" property="createTmpTablePriv" />
    <result column="Lock_tables_priv" jdbcType="CHAR" property="lockTablesPriv" />
    <result column="Execute_priv" jdbcType="CHAR" property="executePriv" />
    <result column="Repl_slave_priv" jdbcType="CHAR" property="replSlavePriv" />
    <result column="Repl_client_priv" jdbcType="CHAR" property="replClientPriv" />
    <result column="Create_view_priv" jdbcType="CHAR" property="createViewPriv" />
    <result column="Show_view_priv" jdbcType="CHAR" property="showViewPriv" />
    <result column="Create_routine_priv" jdbcType="CHAR" property="createRoutinePriv" />
    <result column="Alter_routine_priv" jdbcType="CHAR" property="alterRoutinePriv" />
    <result column="Create_user_priv" jdbcType="CHAR" property="createUserPriv" />
    <result column="Event_priv" jdbcType="CHAR" property="eventPriv" />
    <result column="Trigger_priv" jdbcType="CHAR" property="triggerPriv" />
    <result column="Create_tablespace_priv" jdbcType="CHAR" property="createTablespacePriv" />
    <result column="ssl_type" jdbcType="CHAR" property="sslType" />
    <result column="max_questions" jdbcType="INTEGER" property="maxQuestions" />
    <result column="max_updates" jdbcType="INTEGER" property="maxUpdates" />
    <result column="max_connections" jdbcType="INTEGER" property="maxConnections" />
    <result column="max_user_connections" jdbcType="INTEGER" property="maxUserConnections" />
    <result column="plugin" jdbcType="CHAR" property="plugin" />
    <result column="password_expired" jdbcType="CHAR" property="passwordExpired" />
    <result column="password_last_changed" jdbcType="TIMESTAMP" property="passwordLastChanged" />
    <result column="password_lifetime" jdbcType="SMALLINT" property="passwordLifetime" />
    <result column="account_locked" jdbcType="CHAR" property="accountLocked" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.demo.Model.UserWithBLOBs">
    <result column="ssl_cipher" jdbcType="LONGVARBINARY" property="sslCipher" />
    <result column="x509_issuer" jdbcType="LONGVARBINARY" property="x509Issuer" />
    <result column="x509_subject" jdbcType="LONGVARBINARY" property="x509Subject" />
    <result column="authentication_string" jdbcType="LONGVARCHAR" property="authenticationString" />
  </resultMap>
  <sql id="Blob_Column_List">
    ssl_cipher, x509_issuer, x509_subject, authentication_string
  </sql>
  <insert id="insert" parameterType="com.example.demo.Model.UserWithBLOBs">
    insert into user (Host, User, Select_priv, 
      Insert_priv, Update_priv, Delete_priv, 
      Create_priv, Drop_priv, Reload_priv, 
      Shutdown_priv, Process_priv, File_priv, 
      Grant_priv, References_priv, Index_priv, 
      Alter_priv, Show_db_priv, Super_priv, 
      Create_tmp_table_priv, Lock_tables_priv, Execute_priv, 
      Repl_slave_priv, Repl_client_priv, Create_view_priv, 
      Show_view_priv, Create_routine_priv, Alter_routine_priv, 
      Create_user_priv, Event_priv, Trigger_priv, 
      Create_tablespace_priv, ssl_type, max_questions, 
      max_updates, max_connections, max_user_connections, 
      plugin, password_expired, password_last_changed, 
      password_lifetime, account_locked, ssl_cipher, 
      x509_issuer, x509_subject, authentication_string
      )
    values (#{host,jdbcType=CHAR}, #{user,jdbcType=CHAR}, #{selectPriv,jdbcType=CHAR}, 
      #{insertPriv,jdbcType=CHAR}, #{updatePriv,jdbcType=CHAR}, #{deletePriv,jdbcType=CHAR}, 
      #{createPriv,jdbcType=CHAR}, #{dropPriv,jdbcType=CHAR}, #{reloadPriv,jdbcType=CHAR}, 
      #{shutdownPriv,jdbcType=CHAR}, #{processPriv,jdbcType=CHAR}, #{filePriv,jdbcType=CHAR}, 
      #{grantPriv,jdbcType=CHAR}, #{referencesPriv,jdbcType=CHAR}, #{indexPriv,jdbcType=CHAR}, 
      #{alterPriv,jdbcType=CHAR}, #{showDbPriv,jdbcType=CHAR}, #{superPriv,jdbcType=CHAR}, 
      #{createTmpTablePriv,jdbcType=CHAR}, #{lockTablesPriv,jdbcType=CHAR}, #{executePriv,jdbcType=CHAR}, 
      #{replSlavePriv,jdbcType=CHAR}, #{replClientPriv,jdbcType=CHAR}, #{createViewPriv,jdbcType=CHAR}, 
      #{showViewPriv,jdbcType=CHAR}, #{createRoutinePriv,jdbcType=CHAR}, #{alterRoutinePriv,jdbcType=CHAR}, 
      #{createUserPriv,jdbcType=CHAR}, #{eventPriv,jdbcType=CHAR}, #{triggerPriv,jdbcType=CHAR}, 
      #{createTablespacePriv,jdbcType=CHAR}, #{sslType,jdbcType=CHAR}, #{maxQuestions,jdbcType=INTEGER}, 
      #{maxUpdates,jdbcType=INTEGER}, #{maxConnections,jdbcType=INTEGER}, #{maxUserConnections,jdbcType=INTEGER}, 
      #{plugin,jdbcType=CHAR}, #{passwordExpired,jdbcType=CHAR}, #{passwordLastChanged,jdbcType=TIMESTAMP}, 
      #{passwordLifetime,jdbcType=SMALLINT}, #{accountLocked,jdbcType=CHAR}, #{sslCipher,jdbcType=LONGVARBINARY}, 
      #{x509Issuer,jdbcType=LONGVARBINARY}, #{x509Subject,jdbcType=LONGVARBINARY}, #{authenticationString,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.Model.UserWithBLOBs">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="host != null">
        Host,
      </if>
      <if test="user != null">
        User,
      </if>
      <if test="selectPriv != null">
        Select_priv,
      </if>
      <if test="insertPriv != null">
        Insert_priv,
      </if>
      <if test="updatePriv != null">
        Update_priv,
      </if>
      <if test="deletePriv != null">
        Delete_priv,
      </if>
      <if test="createPriv != null">
        Create_priv,
      </if>
      <if test="dropPriv != null">
        Drop_priv,
      </if>
      <if test="reloadPriv != null">
        Reload_priv,
      </if>
      <if test="shutdownPriv != null">
        Shutdown_priv,
      </if>
      <if test="processPriv != null">
        Process_priv,
      </if>
      <if test="filePriv != null">
        File_priv,
      </if>
      <if test="grantPriv != null">
        Grant_priv,
      </if>
      <if test="referencesPriv != null">
        References_priv,
      </if>
      <if test="indexPriv != null">
        Index_priv,
      </if>
      <if test="alterPriv != null">
        Alter_priv,
      </if>
      <if test="showDbPriv != null">
        Show_db_priv,
      </if>
      <if test="superPriv != null">
        Super_priv,
      </if>
      <if test="createTmpTablePriv != null">
        Create_tmp_table_priv,
      </if>
      <if test="lockTablesPriv != null">
        Lock_tables_priv,
      </if>
      <if test="executePriv != null">
        Execute_priv,
      </if>
      <if test="replSlavePriv != null">
        Repl_slave_priv,
      </if>
      <if test="replClientPriv != null">
        Repl_client_priv,
      </if>
      <if test="createViewPriv != null">
        Create_view_priv,
      </if>
      <if test="showViewPriv != null">
        Show_view_priv,
      </if>
      <if test="createRoutinePriv != null">
        Create_routine_priv,
      </if>
      <if test="alterRoutinePriv != null">
        Alter_routine_priv,
      </if>
      <if test="createUserPriv != null">
        Create_user_priv,
      </if>
      <if test="eventPriv != null">
        Event_priv,
      </if>
      <if test="triggerPriv != null">
        Trigger_priv,
      </if>
      <if test="createTablespacePriv != null">
        Create_tablespace_priv,
      </if>
      <if test="sslType != null">
        ssl_type,
      </if>
      <if test="maxQuestions != null">
        max_questions,
      </if>
      <if test="maxUpdates != null">
        max_updates,
      </if>
      <if test="maxConnections != null">
        max_connections,
      </if>
      <if test="maxUserConnections != null">
        max_user_connections,
      </if>
      <if test="plugin != null">
        plugin,
      </if>
      <if test="passwordExpired != null">
        password_expired,
      </if>
      <if test="passwordLastChanged != null">
        password_last_changed,
      </if>
      <if test="passwordLifetime != null">
        password_lifetime,
      </if>
      <if test="accountLocked != null">
        account_locked,
      </if>
      <if test="sslCipher != null">
        ssl_cipher,
      </if>
      <if test="x509Issuer != null">
        x509_issuer,
      </if>
      <if test="x509Subject != null">
        x509_subject,
      </if>
      <if test="authenticationString != null">
        authentication_string,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="host != null">
        #{host,jdbcType=CHAR},
      </if>
      <if test="user != null">
        #{user,jdbcType=CHAR},
      </if>
      <if test="selectPriv != null">
        #{selectPriv,jdbcType=CHAR},
      </if>
      <if test="insertPriv != null">
        #{insertPriv,jdbcType=CHAR},
      </if>
      <if test="updatePriv != null">
        #{updatePriv,jdbcType=CHAR},
      </if>
      <if test="deletePriv != null">
        #{deletePriv,jdbcType=CHAR},
      </if>
      <if test="createPriv != null">
        #{createPriv,jdbcType=CHAR},
      </if>
      <if test="dropPriv != null">
        #{dropPriv,jdbcType=CHAR},
      </if>
      <if test="reloadPriv != null">
        #{reloadPriv,jdbcType=CHAR},
      </if>
      <if test="shutdownPriv != null">
        #{shutdownPriv,jdbcType=CHAR},
      </if>
      <if test="processPriv != null">
        #{processPriv,jdbcType=CHAR},
      </if>
      <if test="filePriv != null">
        #{filePriv,jdbcType=CHAR},
      </if>
      <if test="grantPriv != null">
        #{grantPriv,jdbcType=CHAR},
      </if>
      <if test="referencesPriv != null">
        #{referencesPriv,jdbcType=CHAR},
      </if>
      <if test="indexPriv != null">
        #{indexPriv,jdbcType=CHAR},
      </if>
      <if test="alterPriv != null">
        #{alterPriv,jdbcType=CHAR},
      </if>
      <if test="showDbPriv != null">
        #{showDbPriv,jdbcType=CHAR},
      </if>
      <if test="superPriv != null">
        #{superPriv,jdbcType=CHAR},
      </if>
      <if test="createTmpTablePriv != null">
        #{createTmpTablePriv,jdbcType=CHAR},
      </if>
      <if test="lockTablesPriv != null">
        #{lockTablesPriv,jdbcType=CHAR},
      </if>
      <if test="executePriv != null">
        #{executePriv,jdbcType=CHAR},
      </if>
      <if test="replSlavePriv != null">
        #{replSlavePriv,jdbcType=CHAR},
      </if>
      <if test="replClientPriv != null">
        #{replClientPriv,jdbcType=CHAR},
      </if>
      <if test="createViewPriv != null">
        #{createViewPriv,jdbcType=CHAR},
      </if>
      <if test="showViewPriv != null">
        #{showViewPriv,jdbcType=CHAR},
      </if>
      <if test="createRoutinePriv != null">
        #{createRoutinePriv,jdbcType=CHAR},
      </if>
      <if test="alterRoutinePriv != null">
        #{alterRoutinePriv,jdbcType=CHAR},
      </if>
      <if test="createUserPriv != null">
        #{createUserPriv,jdbcType=CHAR},
      </if>
      <if test="eventPriv != null">
        #{eventPriv,jdbcType=CHAR},
      </if>
      <if test="triggerPriv != null">
        #{triggerPriv,jdbcType=CHAR},
      </if>
      <if test="createTablespacePriv != null">
        #{createTablespacePriv,jdbcType=CHAR},
      </if>
      <if test="sslType != null">
        #{sslType,jdbcType=CHAR},
      </if>
      <if test="maxQuestions != null">
        #{maxQuestions,jdbcType=INTEGER},
      </if>
      <if test="maxUpdates != null">
        #{maxUpdates,jdbcType=INTEGER},
      </if>
      <if test="maxConnections != null">
        #{maxConnections,jdbcType=INTEGER},
      </if>
      <if test="maxUserConnections != null">
        #{maxUserConnections,jdbcType=INTEGER},
      </if>
      <if test="plugin != null">
        #{plugin,jdbcType=CHAR},
      </if>
      <if test="passwordExpired != null">
        #{passwordExpired,jdbcType=CHAR},
      </if>
      <if test="passwordLastChanged != null">
        #{passwordLastChanged,jdbcType=TIMESTAMP},
      </if>
      <if test="passwordLifetime != null">
        #{passwordLifetime,jdbcType=SMALLINT},
      </if>
      <if test="accountLocked != null">
        #{accountLocked,jdbcType=CHAR},
      </if>
      <if test="sslCipher != null">
        #{sslCipher,jdbcType=LONGVARBINARY},
      </if>
      <if test="x509Issuer != null">
        #{x509Issuer,jdbcType=LONGVARBINARY},
      </if>
      <if test="x509Subject != null">
        #{x509Subject,jdbcType=LONGVARBINARY},
      </if>
      <if test="authenticationString != null">
        #{authenticationString,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <resultMap id="BaseResultMap" type="com.example.demo.Model.User">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="hobby" jdbcType="VARCHAR" property="hobby" />
  </resultMap>
  <insert id="insert" parameterType="com.example.demo.Model.User">
    insert into user (id, name, age, 
      hobby)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{hobby,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.Model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="hobby != null">
        hobby,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="hobby != null">
        #{hobby,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <resultMap id="BaseResultMap" type="com.example.demo.Model.User">
    <result column="Host" jdbcType="CHAR" property="host" />
    <result column="User" jdbcType="CHAR" property="user" />
    <result column="Select_priv" jdbcType="CHAR" property="selectPriv" />
    <result column="Insert_priv" jdbcType="CHAR" property="insertPriv" />
    <result column="Update_priv" jdbcType="CHAR" property="updatePriv" />
    <result column="Delete_priv" jdbcType="CHAR" property="deletePriv" />
    <result column="Create_priv" jdbcType="CHAR" property="createPriv" />
    <result column="Drop_priv" jdbcType="CHAR" property="dropPriv" />
    <result column="Reload_priv" jdbcType="CHAR" property="reloadPriv" />
    <result column="Shutdown_priv" jdbcType="CHAR" property="shutdownPriv" />
    <result column="Process_priv" jdbcType="CHAR" property="processPriv" />
    <result column="File_priv" jdbcType="CHAR" property="filePriv" />
    <result column="Grant_priv" jdbcType="CHAR" property="grantPriv" />
    <result column="References_priv" jdbcType="CHAR" property="referencesPriv" />
    <result column="Index_priv" jdbcType="CHAR" property="indexPriv" />
    <result column="Alter_priv" jdbcType="CHAR" property="alterPriv" />
    <result column="Show_db_priv" jdbcType="CHAR" property="showDbPriv" />
    <result column="Super_priv" jdbcType="CHAR" property="superPriv" />
    <result column="Create_tmp_table_priv" jdbcType="CHAR" property="createTmpTablePriv" />
    <result column="Lock_tables_priv" jdbcType="CHAR" property="lockTablesPriv" />
    <result column="Execute_priv" jdbcType="CHAR" property="executePriv" />
    <result column="Repl_slave_priv" jdbcType="CHAR" property="replSlavePriv" />
    <result column="Repl_client_priv" jdbcType="CHAR" property="replClientPriv" />
    <result column="Create_view_priv" jdbcType="CHAR" property="createViewPriv" />
    <result column="Show_view_priv" jdbcType="CHAR" property="showViewPriv" />
    <result column="Create_routine_priv" jdbcType="CHAR" property="createRoutinePriv" />
    <result column="Alter_routine_priv" jdbcType="CHAR" property="alterRoutinePriv" />
    <result column="Create_user_priv" jdbcType="CHAR" property="createUserPriv" />
    <result column="Event_priv" jdbcType="CHAR" property="eventPriv" />
    <result column="Trigger_priv" jdbcType="CHAR" property="triggerPriv" />
    <result column="Create_tablespace_priv" jdbcType="CHAR" property="createTablespacePriv" />
    <result column="ssl_type" jdbcType="CHAR" property="sslType" />
    <result column="max_questions" jdbcType="INTEGER" property="maxQuestions" />
    <result column="max_updates" jdbcType="INTEGER" property="maxUpdates" />
    <result column="max_connections" jdbcType="INTEGER" property="maxConnections" />
    <result column="max_user_connections" jdbcType="INTEGER" property="maxUserConnections" />
    <result column="plugin" jdbcType="CHAR" property="plugin" />
    <result column="password_expired" jdbcType="CHAR" property="passwordExpired" />
    <result column="password_last_changed" jdbcType="TIMESTAMP" property="passwordLastChanged" />
    <result column="password_lifetime" jdbcType="SMALLINT" property="passwordLifetime" />
    <result column="account_locked" jdbcType="CHAR" property="accountLocked" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.demo.Model.UserWithBLOBs">
    <result column="ssl_cipher" jdbcType="LONGVARBINARY" property="sslCipher" />
    <result column="x509_issuer" jdbcType="LONGVARBINARY" property="x509Issuer" />
    <result column="x509_subject" jdbcType="LONGVARBINARY" property="x509Subject" />
    <result column="authentication_string" jdbcType="LONGVARCHAR" property="authenticationString" />
  </resultMap>
  <sql id="Blob_Column_List">
    ssl_cipher, x509_issuer, x509_subject, authentication_string
  </sql>
  <insert id="insert" parameterType="com.example.demo.Model.UserWithBLOBs">
    insert into user (Host, User, Select_priv, 
      Insert_priv, Update_priv, Delete_priv, 
      Create_priv, Drop_priv, Reload_priv, 
      Shutdown_priv, Process_priv, File_priv, 
      Grant_priv, References_priv, Index_priv, 
      Alter_priv, Show_db_priv, Super_priv, 
      Create_tmp_table_priv, Lock_tables_priv, Execute_priv, 
      Repl_slave_priv, Repl_client_priv, Create_view_priv, 
      Show_view_priv, Create_routine_priv, Alter_routine_priv, 
      Create_user_priv, Event_priv, Trigger_priv, 
      Create_tablespace_priv, ssl_type, max_questions, 
      max_updates, max_connections, max_user_connections, 
      plugin, password_expired, password_last_changed, 
      password_lifetime, account_locked, ssl_cipher, 
      x509_issuer, x509_subject, authentication_string
      )
    values (#{host,jdbcType=CHAR}, #{user,jdbcType=CHAR}, #{selectPriv,jdbcType=CHAR}, 
      #{insertPriv,jdbcType=CHAR}, #{updatePriv,jdbcType=CHAR}, #{deletePriv,jdbcType=CHAR}, 
      #{createPriv,jdbcType=CHAR}, #{dropPriv,jdbcType=CHAR}, #{reloadPriv,jdbcType=CHAR}, 
      #{shutdownPriv,jdbcType=CHAR}, #{processPriv,jdbcType=CHAR}, #{filePriv,jdbcType=CHAR}, 
      #{grantPriv,jdbcType=CHAR}, #{referencesPriv,jdbcType=CHAR}, #{indexPriv,jdbcType=CHAR}, 
      #{alterPriv,jdbcType=CHAR}, #{showDbPriv,jdbcType=CHAR}, #{superPriv,jdbcType=CHAR}, 
      #{createTmpTablePriv,jdbcType=CHAR}, #{lockTablesPriv,jdbcType=CHAR}, #{executePriv,jdbcType=CHAR}, 
      #{replSlavePriv,jdbcType=CHAR}, #{replClientPriv,jdbcType=CHAR}, #{createViewPriv,jdbcType=CHAR}, 
      #{showViewPriv,jdbcType=CHAR}, #{createRoutinePriv,jdbcType=CHAR}, #{alterRoutinePriv,jdbcType=CHAR}, 
      #{createUserPriv,jdbcType=CHAR}, #{eventPriv,jdbcType=CHAR}, #{triggerPriv,jdbcType=CHAR}, 
      #{createTablespacePriv,jdbcType=CHAR}, #{sslType,jdbcType=CHAR}, #{maxQuestions,jdbcType=INTEGER}, 
      #{maxUpdates,jdbcType=INTEGER}, #{maxConnections,jdbcType=INTEGER}, #{maxUserConnections,jdbcType=INTEGER}, 
      #{plugin,jdbcType=CHAR}, #{passwordExpired,jdbcType=CHAR}, #{passwordLastChanged,jdbcType=TIMESTAMP}, 
      #{passwordLifetime,jdbcType=SMALLINT}, #{accountLocked,jdbcType=CHAR}, #{sslCipher,jdbcType=LONGVARBINARY}, 
      #{x509Issuer,jdbcType=LONGVARBINARY}, #{x509Subject,jdbcType=LONGVARBINARY}, #{authenticationString,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.Model.UserWithBLOBs">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="host != null">
        Host,
      </if>
      <if test="user != null">
        User,
      </if>
      <if test="selectPriv != null">
        Select_priv,
      </if>
      <if test="insertPriv != null">
        Insert_priv,
      </if>
      <if test="updatePriv != null">
        Update_priv,
      </if>
      <if test="deletePriv != null">
        Delete_priv,
      </if>
      <if test="createPriv != null">
        Create_priv,
      </if>
      <if test="dropPriv != null">
        Drop_priv,
      </if>
      <if test="reloadPriv != null">
        Reload_priv,
      </if>
      <if test="shutdownPriv != null">
        Shutdown_priv,
      </if>
      <if test="processPriv != null">
        Process_priv,
      </if>
      <if test="filePriv != null">
        File_priv,
      </if>
      <if test="grantPriv != null">
        Grant_priv,
      </if>
      <if test="referencesPriv != null">
        References_priv,
      </if>
      <if test="indexPriv != null">
        Index_priv,
      </if>
      <if test="alterPriv != null">
        Alter_priv,
      </if>
      <if test="showDbPriv != null">
        Show_db_priv,
      </if>
      <if test="superPriv != null">
        Super_priv,
      </if>
      <if test="createTmpTablePriv != null">
        Create_tmp_table_priv,
      </if>
      <if test="lockTablesPriv != null">
        Lock_tables_priv,
      </if>
      <if test="executePriv != null">
        Execute_priv,
      </if>
      <if test="replSlavePriv != null">
        Repl_slave_priv,
      </if>
      <if test="replClientPriv != null">
        Repl_client_priv,
      </if>
      <if test="createViewPriv != null">
        Create_view_priv,
      </if>
      <if test="showViewPriv != null">
        Show_view_priv,
      </if>
      <if test="createRoutinePriv != null">
        Create_routine_priv,
      </if>
      <if test="alterRoutinePriv != null">
        Alter_routine_priv,
      </if>
      <if test="createUserPriv != null">
        Create_user_priv,
      </if>
      <if test="eventPriv != null">
        Event_priv,
      </if>
      <if test="triggerPriv != null">
        Trigger_priv,
      </if>
      <if test="createTablespacePriv != null">
        Create_tablespace_priv,
      </if>
      <if test="sslType != null">
        ssl_type,
      </if>
      <if test="maxQuestions != null">
        max_questions,
      </if>
      <if test="maxUpdates != null">
        max_updates,
      </if>
      <if test="maxConnections != null">
        max_connections,
      </if>
      <if test="maxUserConnections != null">
        max_user_connections,
      </if>
      <if test="plugin != null">
        plugin,
      </if>
      <if test="passwordExpired != null">
        password_expired,
      </if>
      <if test="passwordLastChanged != null">
        password_last_changed,
      </if>
      <if test="passwordLifetime != null">
        password_lifetime,
      </if>
      <if test="accountLocked != null">
        account_locked,
      </if>
      <if test="sslCipher != null">
        ssl_cipher,
      </if>
      <if test="x509Issuer != null">
        x509_issuer,
      </if>
      <if test="x509Subject != null">
        x509_subject,
      </if>
      <if test="authenticationString != null">
        authentication_string,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="host != null">
        #{host,jdbcType=CHAR},
      </if>
      <if test="user != null">
        #{user,jdbcType=CHAR},
      </if>
      <if test="selectPriv != null">
        #{selectPriv,jdbcType=CHAR},
      </if>
      <if test="insertPriv != null">
        #{insertPriv,jdbcType=CHAR},
      </if>
      <if test="updatePriv != null">
        #{updatePriv,jdbcType=CHAR},
      </if>
      <if test="deletePriv != null">
        #{deletePriv,jdbcType=CHAR},
      </if>
      <if test="createPriv != null">
        #{createPriv,jdbcType=CHAR},
      </if>
      <if test="dropPriv != null">
        #{dropPriv,jdbcType=CHAR},
      </if>
      <if test="reloadPriv != null">
        #{reloadPriv,jdbcType=CHAR},
      </if>
      <if test="shutdownPriv != null">
        #{shutdownPriv,jdbcType=CHAR},
      </if>
      <if test="processPriv != null">
        #{processPriv,jdbcType=CHAR},
      </if>
      <if test="filePriv != null">
        #{filePriv,jdbcType=CHAR},
      </if>
      <if test="grantPriv != null">
        #{grantPriv,jdbcType=CHAR},
      </if>
      <if test="referencesPriv != null">
        #{referencesPriv,jdbcType=CHAR},
      </if>
      <if test="indexPriv != null">
        #{indexPriv,jdbcType=CHAR},
      </if>
      <if test="alterPriv != null">
        #{alterPriv,jdbcType=CHAR},
      </if>
      <if test="showDbPriv != null">
        #{showDbPriv,jdbcType=CHAR},
      </if>
      <if test="superPriv != null">
        #{superPriv,jdbcType=CHAR},
      </if>
      <if test="createTmpTablePriv != null">
        #{createTmpTablePriv,jdbcType=CHAR},
      </if>
      <if test="lockTablesPriv != null">
        #{lockTablesPriv,jdbcType=CHAR},
      </if>
      <if test="executePriv != null">
        #{executePriv,jdbcType=CHAR},
      </if>
      <if test="replSlavePriv != null">
        #{replSlavePriv,jdbcType=CHAR},
      </if>
      <if test="replClientPriv != null">
        #{replClientPriv,jdbcType=CHAR},
      </if>
      <if test="createViewPriv != null">
        #{createViewPriv,jdbcType=CHAR},
      </if>
      <if test="showViewPriv != null">
        #{showViewPriv,jdbcType=CHAR},
      </if>
      <if test="createRoutinePriv != null">
        #{createRoutinePriv,jdbcType=CHAR},
      </if>
      <if test="alterRoutinePriv != null">
        #{alterRoutinePriv,jdbcType=CHAR},
      </if>
      <if test="createUserPriv != null">
        #{createUserPriv,jdbcType=CHAR},
      </if>
      <if test="eventPriv != null">
        #{eventPriv,jdbcType=CHAR},
      </if>
      <if test="triggerPriv != null">
        #{triggerPriv,jdbcType=CHAR},
      </if>
      <if test="createTablespacePriv != null">
        #{createTablespacePriv,jdbcType=CHAR},
      </if>
      <if test="sslType != null">
        #{sslType,jdbcType=CHAR},
      </if>
      <if test="maxQuestions != null">
        #{maxQuestions,jdbcType=INTEGER},
      </if>
      <if test="maxUpdates != null">
        #{maxUpdates,jdbcType=INTEGER},
      </if>
      <if test="maxConnections != null">
        #{maxConnections,jdbcType=INTEGER},
      </if>
      <if test="maxUserConnections != null">
        #{maxUserConnections,jdbcType=INTEGER},
      </if>
      <if test="plugin != null">
        #{plugin,jdbcType=CHAR},
      </if>
      <if test="passwordExpired != null">
        #{passwordExpired,jdbcType=CHAR},
      </if>
      <if test="passwordLastChanged != null">
        #{passwordLastChanged,jdbcType=TIMESTAMP},
      </if>
      <if test="passwordLifetime != null">
        #{passwordLifetime,jdbcType=SMALLINT},
      </if>
      <if test="accountLocked != null">
        #{accountLocked,jdbcType=CHAR},
      </if>
      <if test="sslCipher != null">
        #{sslCipher,jdbcType=LONGVARBINARY},
      </if>
      <if test="x509Issuer != null">
        #{x509Issuer,jdbcType=LONGVARBINARY},
      </if>
      <if test="x509Subject != null">
        #{x509Subject,jdbcType=LONGVARBINARY},
      </if>
      <if test="authenticationString != null">
        #{authenticationString,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <resultMap id="BaseResultMap" type="com.example.demo.Model.User">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="hobby" jdbcType="VARCHAR" property="hobby" />
  </resultMap>
  <insert id="insert" parameterType="com.example.demo.Model.User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user (name, age, hobby
      )
    values (#{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{hobby,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.Model.User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="hobby != null">
        hobby,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="hobby != null">
        #{hobby,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <resultMap id="BaseResultMap" type="com.example.demo.Model.User">
    <result column="Host" jdbcType="CHAR" property="host" />
    <result column="User" jdbcType="CHAR" property="user" />
    <result column="Select_priv" jdbcType="CHAR" property="selectPriv" />
    <result column="Insert_priv" jdbcType="CHAR" property="insertPriv" />
    <result column="Update_priv" jdbcType="CHAR" property="updatePriv" />
    <result column="Delete_priv" jdbcType="CHAR" property="deletePriv" />
    <result column="Create_priv" jdbcType="CHAR" property="createPriv" />
    <result column="Drop_priv" jdbcType="CHAR" property="dropPriv" />
    <result column="Reload_priv" jdbcType="CHAR" property="reloadPriv" />
    <result column="Shutdown_priv" jdbcType="CHAR" property="shutdownPriv" />
    <result column="Process_priv" jdbcType="CHAR" property="processPriv" />
    <result column="File_priv" jdbcType="CHAR" property="filePriv" />
    <result column="Grant_priv" jdbcType="CHAR" property="grantPriv" />
    <result column="References_priv" jdbcType="CHAR" property="referencesPriv" />
    <result column="Index_priv" jdbcType="CHAR" property="indexPriv" />
    <result column="Alter_priv" jdbcType="CHAR" property="alterPriv" />
    <result column="Show_db_priv" jdbcType="CHAR" property="showDbPriv" />
    <result column="Super_priv" jdbcType="CHAR" property="superPriv" />
    <result column="Create_tmp_table_priv" jdbcType="CHAR" property="createTmpTablePriv" />
    <result column="Lock_tables_priv" jdbcType="CHAR" property="lockTablesPriv" />
    <result column="Execute_priv" jdbcType="CHAR" property="executePriv" />
    <result column="Repl_slave_priv" jdbcType="CHAR" property="replSlavePriv" />
    <result column="Repl_client_priv" jdbcType="CHAR" property="replClientPriv" />
    <result column="Create_view_priv" jdbcType="CHAR" property="createViewPriv" />
    <result column="Show_view_priv" jdbcType="CHAR" property="showViewPriv" />
    <result column="Create_routine_priv" jdbcType="CHAR" property="createRoutinePriv" />
    <result column="Alter_routine_priv" jdbcType="CHAR" property="alterRoutinePriv" />
    <result column="Create_user_priv" jdbcType="CHAR" property="createUserPriv" />
    <result column="Event_priv" jdbcType="CHAR" property="eventPriv" />
    <result column="Trigger_priv" jdbcType="CHAR" property="triggerPriv" />
    <result column="Create_tablespace_priv" jdbcType="CHAR" property="createTablespacePriv" />
    <result column="ssl_type" jdbcType="CHAR" property="sslType" />
    <result column="max_questions" jdbcType="INTEGER" property="maxQuestions" />
    <result column="max_updates" jdbcType="INTEGER" property="maxUpdates" />
    <result column="max_connections" jdbcType="INTEGER" property="maxConnections" />
    <result column="max_user_connections" jdbcType="INTEGER" property="maxUserConnections" />
    <result column="plugin" jdbcType="CHAR" property="plugin" />
    <result column="password_expired" jdbcType="CHAR" property="passwordExpired" />
    <result column="password_last_changed" jdbcType="TIMESTAMP" property="passwordLastChanged" />
    <result column="password_lifetime" jdbcType="SMALLINT" property="passwordLifetime" />
    <result column="account_locked" jdbcType="CHAR" property="accountLocked" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.demo.Model.UserWithBLOBs">
    <result column="ssl_cipher" jdbcType="LONGVARBINARY" property="sslCipher" />
    <result column="x509_issuer" jdbcType="LONGVARBINARY" property="x509Issuer" />
    <result column="x509_subject" jdbcType="LONGVARBINARY" property="x509Subject" />
    <result column="authentication_string" jdbcType="LONGVARCHAR" property="authenticationString" />
  </resultMap>
  <sql id="Blob_Column_List">
    ssl_cipher, x509_issuer, x509_subject, authentication_string
  </sql>
  <insert id="insert" parameterType="com.example.demo.Model.UserWithBLOBs">
    insert into user (Host, User, Select_priv, 
      Insert_priv, Update_priv, Delete_priv, 
      Create_priv, Drop_priv, Reload_priv, 
      Shutdown_priv, Process_priv, File_priv, 
      Grant_priv, References_priv, Index_priv, 
      Alter_priv, Show_db_priv, Super_priv, 
      Create_tmp_table_priv, Lock_tables_priv, Execute_priv, 
      Repl_slave_priv, Repl_client_priv, Create_view_priv, 
      Show_view_priv, Create_routine_priv, Alter_routine_priv, 
      Create_user_priv, Event_priv, Trigger_priv, 
      Create_tablespace_priv, ssl_type, max_questions, 
      max_updates, max_connections, max_user_connections, 
      plugin, password_expired, password_last_changed, 
      password_lifetime, account_locked, ssl_cipher, 
      x509_issuer, x509_subject, authentication_string
      )
    values (#{host,jdbcType=CHAR}, #{user,jdbcType=CHAR}, #{selectPriv,jdbcType=CHAR}, 
      #{insertPriv,jdbcType=CHAR}, #{updatePriv,jdbcType=CHAR}, #{deletePriv,jdbcType=CHAR}, 
      #{createPriv,jdbcType=CHAR}, #{dropPriv,jdbcType=CHAR}, #{reloadPriv,jdbcType=CHAR}, 
      #{shutdownPriv,jdbcType=CHAR}, #{processPriv,jdbcType=CHAR}, #{filePriv,jdbcType=CHAR}, 
      #{grantPriv,jdbcType=CHAR}, #{referencesPriv,jdbcType=CHAR}, #{indexPriv,jdbcType=CHAR}, 
      #{alterPriv,jdbcType=CHAR}, #{showDbPriv,jdbcType=CHAR}, #{superPriv,jdbcType=CHAR}, 
      #{createTmpTablePriv,jdbcType=CHAR}, #{lockTablesPriv,jdbcType=CHAR}, #{executePriv,jdbcType=CHAR}, 
      #{replSlavePriv,jdbcType=CHAR}, #{replClientPriv,jdbcType=CHAR}, #{createViewPriv,jdbcType=CHAR}, 
      #{showViewPriv,jdbcType=CHAR}, #{createRoutinePriv,jdbcType=CHAR}, #{alterRoutinePriv,jdbcType=CHAR}, 
      #{createUserPriv,jdbcType=CHAR}, #{eventPriv,jdbcType=CHAR}, #{triggerPriv,jdbcType=CHAR}, 
      #{createTablespacePriv,jdbcType=CHAR}, #{sslType,jdbcType=CHAR}, #{maxQuestions,jdbcType=INTEGER}, 
      #{maxUpdates,jdbcType=INTEGER}, #{maxConnections,jdbcType=INTEGER}, #{maxUserConnections,jdbcType=INTEGER}, 
      #{plugin,jdbcType=CHAR}, #{passwordExpired,jdbcType=CHAR}, #{passwordLastChanged,jdbcType=TIMESTAMP}, 
      #{passwordLifetime,jdbcType=SMALLINT}, #{accountLocked,jdbcType=CHAR}, #{sslCipher,jdbcType=LONGVARBINARY}, 
      #{x509Issuer,jdbcType=LONGVARBINARY}, #{x509Subject,jdbcType=LONGVARBINARY}, #{authenticationString,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.Model.UserWithBLOBs">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="host != null">
        Host,
      </if>
      <if test="user != null">
        User,
      </if>
      <if test="selectPriv != null">
        Select_priv,
      </if>
      <if test="insertPriv != null">
        Insert_priv,
      </if>
      <if test="updatePriv != null">
        Update_priv,
      </if>
      <if test="deletePriv != null">
        Delete_priv,
      </if>
      <if test="createPriv != null">
        Create_priv,
      </if>
      <if test="dropPriv != null">
        Drop_priv,
      </if>
      <if test="reloadPriv != null">
        Reload_priv,
      </if>
      <if test="shutdownPriv != null">
        Shutdown_priv,
      </if>
      <if test="processPriv != null">
        Process_priv,
      </if>
      <if test="filePriv != null">
        File_priv,
      </if>
      <if test="grantPriv != null">
        Grant_priv,
      </if>
      <if test="referencesPriv != null">
        References_priv,
      </if>
      <if test="indexPriv != null">
        Index_priv,
      </if>
      <if test="alterPriv != null">
        Alter_priv,
      </if>
      <if test="showDbPriv != null">
        Show_db_priv,
      </if>
      <if test="superPriv != null">
        Super_priv,
      </if>
      <if test="createTmpTablePriv != null">
        Create_tmp_table_priv,
      </if>
      <if test="lockTablesPriv != null">
        Lock_tables_priv,
      </if>
      <if test="executePriv != null">
        Execute_priv,
      </if>
      <if test="replSlavePriv != null">
        Repl_slave_priv,
      </if>
      <if test="replClientPriv != null">
        Repl_client_priv,
      </if>
      <if test="createViewPriv != null">
        Create_view_priv,
      </if>
      <if test="showViewPriv != null">
        Show_view_priv,
      </if>
      <if test="createRoutinePriv != null">
        Create_routine_priv,
      </if>
      <if test="alterRoutinePriv != null">
        Alter_routine_priv,
      </if>
      <if test="createUserPriv != null">
        Create_user_priv,
      </if>
      <if test="eventPriv != null">
        Event_priv,
      </if>
      <if test="triggerPriv != null">
        Trigger_priv,
      </if>
      <if test="createTablespacePriv != null">
        Create_tablespace_priv,
      </if>
      <if test="sslType != null">
        ssl_type,
      </if>
      <if test="maxQuestions != null">
        max_questions,
      </if>
      <if test="maxUpdates != null">
        max_updates,
      </if>
      <if test="maxConnections != null">
        max_connections,
      </if>
      <if test="maxUserConnections != null">
        max_user_connections,
      </if>
      <if test="plugin != null">
        plugin,
      </if>
      <if test="passwordExpired != null">
        password_expired,
      </if>
      <if test="passwordLastChanged != null">
        password_last_changed,
      </if>
      <if test="passwordLifetime != null">
        password_lifetime,
      </if>
      <if test="accountLocked != null">
        account_locked,
      </if>
      <if test="sslCipher != null">
        ssl_cipher,
      </if>
      <if test="x509Issuer != null">
        x509_issuer,
      </if>
      <if test="x509Subject != null">
        x509_subject,
      </if>
      <if test="authenticationString != null">
        authentication_string,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="host != null">
        #{host,jdbcType=CHAR},
      </if>
      <if test="user != null">
        #{user,jdbcType=CHAR},
      </if>
      <if test="selectPriv != null">
        #{selectPriv,jdbcType=CHAR},
      </if>
      <if test="insertPriv != null">
        #{insertPriv,jdbcType=CHAR},
      </if>
      <if test="updatePriv != null">
        #{updatePriv,jdbcType=CHAR},
      </if>
      <if test="deletePriv != null">
        #{deletePriv,jdbcType=CHAR},
      </if>
      <if test="createPriv != null">
        #{createPriv,jdbcType=CHAR},
      </if>
      <if test="dropPriv != null">
        #{dropPriv,jdbcType=CHAR},
      </if>
      <if test="reloadPriv != null">
        #{reloadPriv,jdbcType=CHAR},
      </if>
      <if test="shutdownPriv != null">
        #{shutdownPriv,jdbcType=CHAR},
      </if>
      <if test="processPriv != null">
        #{processPriv,jdbcType=CHAR},
      </if>
      <if test="filePriv != null">
        #{filePriv,jdbcType=CHAR},
      </if>
      <if test="grantPriv != null">
        #{grantPriv,jdbcType=CHAR},
      </if>
      <if test="referencesPriv != null">
        #{referencesPriv,jdbcType=CHAR},
      </if>
      <if test="indexPriv != null">
        #{indexPriv,jdbcType=CHAR},
      </if>
      <if test="alterPriv != null">
        #{alterPriv,jdbcType=CHAR},
      </if>
      <if test="showDbPriv != null">
        #{showDbPriv,jdbcType=CHAR},
      </if>
      <if test="superPriv != null">
        #{superPriv,jdbcType=CHAR},
      </if>
      <if test="createTmpTablePriv != null">
        #{createTmpTablePriv,jdbcType=CHAR},
      </if>
      <if test="lockTablesPriv != null">
        #{lockTablesPriv,jdbcType=CHAR},
      </if>
      <if test="executePriv != null">
        #{executePriv,jdbcType=CHAR},
      </if>
      <if test="replSlavePriv != null">
        #{replSlavePriv,jdbcType=CHAR},
      </if>
      <if test="replClientPriv != null">
        #{replClientPriv,jdbcType=CHAR},
      </if>
      <if test="createViewPriv != null">
        #{createViewPriv,jdbcType=CHAR},
      </if>
      <if test="showViewPriv != null">
        #{showViewPriv,jdbcType=CHAR},
      </if>
      <if test="createRoutinePriv != null">
        #{createRoutinePriv,jdbcType=CHAR},
      </if>
      <if test="alterRoutinePriv != null">
        #{alterRoutinePriv,jdbcType=CHAR},
      </if>
      <if test="createUserPriv != null">
        #{createUserPriv,jdbcType=CHAR},
      </if>
      <if test="eventPriv != null">
        #{eventPriv,jdbcType=CHAR},
      </if>
      <if test="triggerPriv != null">
        #{triggerPriv,jdbcType=CHAR},
      </if>
      <if test="createTablespacePriv != null">
        #{createTablespacePriv,jdbcType=CHAR},
      </if>
      <if test="sslType != null">
        #{sslType,jdbcType=CHAR},
      </if>
      <if test="maxQuestions != null">
        #{maxQuestions,jdbcType=INTEGER},
      </if>
      <if test="maxUpdates != null">
        #{maxUpdates,jdbcType=INTEGER},
      </if>
      <if test="maxConnections != null">
        #{maxConnections,jdbcType=INTEGER},
      </if>
      <if test="maxUserConnections != null">
        #{maxUserConnections,jdbcType=INTEGER},
      </if>
      <if test="plugin != null">
        #{plugin,jdbcType=CHAR},
      </if>
      <if test="passwordExpired != null">
        #{passwordExpired,jdbcType=CHAR},
      </if>
      <if test="passwordLastChanged != null">
        #{passwordLastChanged,jdbcType=TIMESTAMP},
      </if>
      <if test="passwordLifetime != null">
        #{passwordLifetime,jdbcType=SMALLINT},
      </if>
      <if test="accountLocked != null">
        #{accountLocked,jdbcType=CHAR},
      </if>
      <if test="sslCipher != null">
        #{sslCipher,jdbcType=LONGVARBINARY},
      </if>
      <if test="x509Issuer != null">
        #{x509Issuer,jdbcType=LONGVARBINARY},
      </if>
      <if test="x509Subject != null">
        #{x509Subject,jdbcType=LONGVARBINARY},
      </if>
      <if test="authenticationString != null">
        #{authenticationString,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
</mapper>